<template>
   <page-panel title="房态数据管理">
    <template slot="page-panel-header-btns">
      <el-button type="primary" @click="onSyncPoiRooms" :loading="isLoading">全量推送酒店房态数据</el-button>
    </template>
    <section slot="page-panel-body">
       <!-- 查询 -->
      <div class="_search-header">
        <el-form :inline="true" :model="queryObj">
          <el-form-item>
            <!-- <el-input v-model="queryObj.companyAccountId" placeholder="商家ID" :maxlength="20" clearable></el-input> -->
            <company-account-selected v-model="queryObj.companyAccountId" style="width: 350px;"></company-account-selected>
          </el-form-item>
          <el-form-item>
            <el-input v-model="queryObj.hotelId" placeholder="酒店ID" :maxlength="20" clearable></el-input>
          </el-form-item>
          <el-form-item>
            <el-select v-model="queryObj.syncStatus" placeholder="是否同步" clearable style="width: 150px;">
                <el-option label="未同步" value="0"></el-option>
                <el-option label="已同步" value="1"></el-option>
            </el-select>
          </el-form-item>
          <el-form-item>
            <el-select v-model="queryObj.used" placeholder="上线状态" clearable style="width: 150px;">
                <el-option label="已下线" value="0"></el-option>
                <el-option label="已上线" value="1"></el-option>
            </el-select>
          </el-form-item>
          <el-form-item>
            <el-button icon="el-icon-search" type="primary" @click="loadTableData" :loading="isLoading">查询</el-button>
            <el-button icon="el-icon-arrow-up" type="primary" @click="onLine(true)" :loading="isLoading">批量上线</el-button>
            <el-button icon="el-icon-arrow-down" type="danger" @click="onLine(false)" :loading="isLoading">批量下线</el-button>
          </el-form-item>
        </el-form>
      </div>
      <!-- 列表 -->
      <el-table :data="tableData" style="width: 100%" @selection-change="handleSelectionChange">
        <el-table-column type="selection"  width="55"> </el-table-column>
        <el-table-column align="center" prop="id" label="主键" width="55"> </el-table-column>
        <el-table-column align="center" prop="parentRoomTypeName" label="房型名称"> </el-table-column>
        <el-table-column align="center" prop="hotelId" label="酒店Id"> </el-table-column>
        <el-table-column align="center" prop="supplierId" label="供应商id"> </el-table-column>
        <el-table-column align="center" prop="roomTypeId" label="房型Id"> </el-table-column>
        <el-table-column align="center" prop="parentRoomTypeId" label="母房型Id"> </el-table-column>
        <el-table-column align="center" prop="priceTypeId" label="价格类型Id"> </el-table-column>
        <el-table-column align="center" prop="priceTypeName" label="价格类型名称"> </el-table-column>
        <el-table-column align="center" label="同步状态">
          <template slot-scope="scope">
            <el-tag :type="scope.row.syncStatus == 0 ? 'gray' : 'success'">{{ scope.row.syncStatus == 0 ? "未匹配": "已匹配"}}</el-tag>
          </template>
        </el-table-column>
        <el-table-column align="center" label="上线状态">
          <template slot-scope="scope">
            <el-tag :type="scope.row.used == 0 ? 'gray' : 'success'">{{ scope.row.used == 0 ? "已下线": "已上线"}}</el-tag>
          </template>
        </el-table-column>
        <el-table-column align="center" width="200" label="操作">
          <template slot-scope="scope">
            <el-button size="mini" type="info" @click="onSync(scope.row)" v-show="scope.row.syncStatus==0">同步匹配状态</el-button>
          </template>
        </el-table-column>
      </el-table>
    </section>
    <el-pagination slot="page-panel-pagination"
      @size-change="handleSizeChange"
      @current-change="handleCurrentChange"
      :current-page="pageNo"
      :page-sizes="[20, 50, 100, 200]"
      :page-size="pageSize"
      layout="total, sizes, prev, pager, next, jumper"
      :total="total">
    </el-pagination>
  </page-panel>
</template>
<script>
import map from 'lodash/map'
import CompanyAccountSelected from '@/pages/components/company-account-selected'
export default {
  components:{CompanyAccountSelected},
  data () {
    return {
      isLoading:false,
      multipleSelection:[],
      tableData:[],
      pageNo :1,
      pageSize :20,
      total: 0,
      queryObj:{
        channelId:4,
        syncStatus:'',//是否同步 0 未同步 1 已同步
        hotelId:'',
        companyAccountId:'',
        used:''//匹配状态 0 未匹配 1 已匹配
      },
    }
  },
  methods:{
    async onLine(status){
      let txt=status?'上线':'下线'
      if(this.multipleSelection.length==0){
        this.$message.info( `请选择要${txt}的产品`)
        return
      }
      let str=map(this.multipleSelection,item=>{
        return `${item.roomTypeId}_${item.priceTypeId}_${item.supplierId}_${item.itemId}_${item.parentRoomTypeId}`
      })
      console.log(str)

    },
    handleSelectionChange(val) {
      this.multipleSelection = val
    },
    loadTableData: async function() {
      this.isLoading = true
      this.queryObj.pageNo = this.pageNo
      this.queryObj.pageSize = this.pageSize
      let result=await this.$api.request.getMeiTuanChannelMappingPageList(this.queryObj)
      const {error,data}=result
      if(error!=null)
        return
      this.tableData=data.dataList
      this.total=data.totalRows
      this.isLoading = false
    },
    handleSizeChange(val) {
      this.pageSize = val
      this.loadTableData()
    },
    handleCurrentChange(val) {
      this.pageNo = val
      this.loadTableData()
    },
    async onSync(row){
      this.isLoading = true
      let result = await this.$api.request.updateRoomStatus(row)
      const {error,data}=result
      if(error!=null)
        return
      if(data.success){
        this.$message.success("操作成功")
        this.loadTableData()
      }else{
        this.$message.error(data.message)
      }
      this.isLoading = false
    },
    onSyncPoiRooms:async function(row){
      this.isLoading = true
      try {
        await this.$confirm(`确认要提交操作吗?`, '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        })
        // 同意
        console.log("confirm, 删除中...")
        let result = await this.$api.request.syncRoomStatus()
        const {error,data}=result
        if(error!=null)
          return
        if(data.success){
          this.$message.success("操作成功")
        }else{
          this.$message.error(data.message)
        }
      } catch (e) {
        this.isLoading = false
      }
      this.isLoading = false
    }
  },
  created() {
    this.loadTableData()
  }
}
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped>
</style>

